server.port=${API_HTTP_PORT:8080}

spring.application.name=graphql-api
logging.path=${HOME}/graphql_logs

spring.datasource.driver-class-name=${DATA_DB_DRIVER:org.postgresql.Driver}
spring.datasource.url=${DATA_DB_URL:jdbc:postgresql://localhost:5432/renesans}
spring.datasource.username=${DB_USER:masteradmin}
spring.datasource.password=${DB_PASSWORD:qazwsx}
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.poolName=data-db-connection-pool
spring.datasource.connectionTimeout=30000
spring.datasource.idleTimeout=600000
spring.datasource.maxLifetime=1800000
spring.datasource.minimumIdle=10
spring.datasource.maximumPoolSize=30

spring.flyway.baseline-on-migrate=true
spring.flyway.out-of-order=true
spring.flyway.driver=${DATA_DB_DRIVER:org.postgresql.Driver}
spring.flyway.url=${DATA_DB_URL:jdbc:postgresql://localhost:5432/renesans}
spring.flyway.schemas=data
spring.flyway.user=${FLYWAY_DB_USER:masteradmin}
spring.flyway.password=${FLYWAY_DB_PASSWORD:qazwsx}
spring.flyway.validateOnMigrate=${DATA_VALIDATE_MIGRATION:true}
spring.flyway.locations=classpath:db/migration/{vendor}/
spring.flyway.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.flyway.datasource.poolName=flyway-db-connection-pool
spring.flyway.datasource.connectionTimeout=30000
spring.flyway.datasource.idleTimeout=600000
spring.flyway.datasource.maxLifetime=1800000
spring.flyway.datasource.minimumIdle=0
spring.flyway.datasource.maximumPoolSize=4

spring.jpa.properties.hibernate.default_schema=data
spring.jpa.properties.hibernate.show_sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.ddl-auto = validate
spring.jpa.properties.hibernate.current_session_context_class=thread
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.create_empty_composites.enabled=true
spring.jpa.properties.hibernate.proc.param_null_passing=true
spring.jpa.properties.hibernate.discriminator.force_in_select=true

#Hibernate 2nd-level cache
spring.jpa.properties.javax.persistence.sharedCache.mode=ALL
spring.jpa.properties.hibernate.cache.use_second_level_cache=${HIBERNATE_USE_2ND_LEVEL_CACHE:false}
spring.jpa.properties.hibernate.cache.use_query_cache=${HIBERNATE_USE_QUERY_CACHE:false}
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
# Hibernate auditing
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_history
spring.jpa.properties.org.hibernate.envers.revision_on_collection_change=false
spring.jpa.properties.org.hibernate.envers.do_not_audit_optimistic_locking_field=false
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=false
spring.jpa.properties.org.hibernate.envers.revision_field_name=rev
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=rev_type

spring.mvc.async.request-timeout=${REST_REQUEST_TIMEOUT_MS:300000}

graphql.servlet.mapping= /survey/graphql
graphql.servlet.enabled=true
graphql.servlet.corsEnabled=${CORS_ENABLED:true}
fi.sangre.security.corsEnabled=${CORS_ENABLED:true}

fi.sangre.report.generator.zip.thread_pool_size=${REPORT_GENERATOR_THREAD_POOL_SIZE:10}
fi.sangre.report.generator.uri=${REPORT_GENERATOR_URI:http://10.254.254.254:3002}
fi.sangre.report.filename=${REPORT_GENERATOR_FILENAME:weCan-report.pdf}

fi.sangre.comparativeReport.generator.uri=${COMPARATIVE_REPORT_GENERATOR_URI:http://10.254.254.254:3003}
fi.sangre.comparativeReport.filename=${COMPARATIVE_REPORT_GENERATOR_FILENAME:weCan-comparative-report.pdf}

athena-pdf.ribbon.eureka.enabled=false
# servers can be specified after commas
athena-pdf.ribbon.listOfServers=${REPORT_CONVERTER_URI:http://10.254.254.254:8081}
fi.sangre.pdf.shared.secret=${REPORT_CONVERTER_SECRET:arachnys-weaver}
fi.sangre.pdf.thread_pool.size=${REPORT_CONVERTER_THREAD_POOL_SIZE:2}
fi.sangre.pdf.retry_count=${REPORT_CONVERTER_RETRY_COUNT:3}

fi.sangre.renesans.statistics.min-respondent-count=${STATISTICS_MIN_RESPONDENT_COUNT:1}

fi.sangre.renesans.media-service.url=${MEDIA_SERVICE_URL:http://localhost:9094}
fi.sangre.renesans.mail-service.url=${MAIL_SERVICE_URL:http://localhost:9093}
fi.sangre.renesans.invitation.url=${INVITATION_API_URL:http://localhost:9093/mailjet/v1/invitations/}
fi.sangre.renesans.email.useTemplate=${EMAIL_USE_TEMPLATES:false}
fi.sangre.renesans.emailTemplates.url=${EMAIL_TEMPLATES_URL:http://localhost:3005/}
fi.sangre.renesans.survey.url=${SURVEY_APP_URL:http://localhost:3000}
fi.sangre.renesans.admin.url=${ADMIN_APP_URL:http://localhost:3001}

fi.sangre.s3.endpoint=${MINIO_S3_ENDPOINT:https://localhost:9001/}
fi.sangre.s3.access.key=${MINIO_S3_ACCESS_KEY:minio}
fi.sangre.s3.secret.key=${MINIO_S3_SECRET_KEY:minio1234}
fi.sangre.s3.bucket=${MINIO_S3_BUCKET:wecan}
fi.sangre.s3.secure=${MINIO_S3_SECURE:false}

spring.cache.caffeine.spec=${AUTH_CACHE_SPEC:initialCapacity=100,maximumSize=500,expireAfterAccess=1m,recordStats}

spring.security.jwt.token.secret=${AUTH_TOKEN_SECRET:secret}
spring.security.jwt.login.token.expirationTimeInMs=${AUTH_LOGIN_TOKEN_EXPIRE_TIME_MS:604800000}
spring.security.jwt.reset.token.expirationTimeInMs=${AUTH_RESET_TOKEN_EXPIRE_TIME_MS:900000}
spring.security.jwt.activation.token.expirationTimeInMs=${AUTH_ACTIVATION_TOKEN_EXPIRE_TIME_MS:86400000}
